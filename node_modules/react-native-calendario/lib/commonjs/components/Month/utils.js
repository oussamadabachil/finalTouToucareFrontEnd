"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMonthDrawn = isMonthDrawn;
exports.monthBetweenRange = monthBetweenRange;
exports.shouldRenderMonth = shouldRenderMonth;
var _moment = _interopRequireDefault(require("moment"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function monthBetweenRange(month, start, end) {
  const firstDayOfMonth = month.startOf('month').toDate();
  const lastDayOfMonth = month.endOf('month').toDate();
  return firstDayOfMonth <= end && firstDayOfMonth >= start || lastDayOfMonth >= start && lastDayOfMonth <= end || start <= lastDayOfMonth && end >= firstDayOfMonth;
}
function isMonthDrawn(year, month, start, end) {
  if (start instanceof Date) {
    start.setHours(0, 0, 0, 0);
    if (end instanceof Date) {
      end.setHours(0, 0, 0, 0);
      const firstMonthDay = new Date(year, month, 0, 0, 0, 0, 0);
      const lastMonthDay = new Date(year, month + 1, 0);
      return firstMonthDay <= end && firstMonthDay >= start || lastMonthDay >= start && lastMonthDay <= end || start <= lastMonthDay && end >= firstMonthDay;
    }
    return start.getFullYear() === year && start.getMonth() === month;
  }
  return false;
}
function shouldRenderMonth(currentMonth, pervMinMax, nextMinMax) {
  if (pervMinMax !== nextMinMax) {
    if (pervMinMax) {
      if (nextMinMax) {
        if ((0, _moment.default)(pervMinMax).isSame(currentMonth, 'month') || (0, _moment.default)(nextMinMax).isSame(currentMonth, 'month')) {
          return true;
        }
        const monthBetweenMinRange = pervMinMax < nextMinMax ? monthBetweenRange(currentMonth, (0, _moment.default)(pervMinMax).toDate(), (0, _moment.default)(nextMinMax).toDate()) : monthBetweenRange(currentMonth, (0, _moment.default)(nextMinMax).toDate(), (0, _moment.default)(pervMinMax).toDate());
        if (monthBetweenMinRange) {
          return true;
        }
      } else if ((0, _moment.default)(pervMinMax).isSame(currentMonth, 'month')) {
        return true;
      }
    } else if ((0, _moment.default)(nextMinMax).isSame(currentMonth, 'month')) {
      return true;
    }
  }
  return false;
}
//# sourceMappingURL=utils.js.map