{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["import { ReactElement } from 'react';\nimport { ViewStyle, TextStyle } from 'react-native';\n\nexport type LocaleType = 'es' | 'en' | 'fr' | 'br' | 'zh' | 'ru' | 'uk';\n\nexport interface DayTheme {\n  activeDayColor?: string;\n  activeDayContainerStyle?: ViewStyle;\n  activeDayContentStyle?: ViewStyle;\n  activeDayTextStyle?: TextStyle;\n  dayContainerStyle?: ViewStyle;\n  dayContentStyle?: ViewStyle;\n  dayOutOfRangeContainerStyle?: ViewStyle;\n  dayOutOfRangeTextStyle?: TextStyle;\n  dayTextStyle?: TextStyle;\n  startDateContainerStyle?: ViewStyle;\n  endDateContainerStyle?: ViewStyle;\n  nonTouchableDayContainerStyle?: ViewStyle;\n  nonTouchableDayTextStyle?: TextStyle;\n  nonTouchableLastMonthDayTextStyle?: TextStyle;\n  weekendContainerStyle?: ViewStyle;\n  weekendContentStyle?: ViewStyle;\n  weekendTextStyle?: TextStyle;\n  todayContainerStyle?: ViewStyle;\n  todayTextStyle?: TextStyle;\n}\n\nexport interface DotTheme {\n  dotContainerStyle?: ViewStyle;\n}\n\nexport interface ThemeType extends DayTheme, DotTheme {\n  weekColumnsContainerStyle?: ViewStyle;\n  weekColumnStyle?: ViewStyle;\n  weekColumnTextStyle?: TextStyle;\n}\n\nexport type DayDot = {\n  /**\n   * Color used when the day is not selected\n   *\n   * @type {string}\n   */\n  color: string;\n\n  /**\n   * Color used when the day is selected\n   *\n   * @type {string}\n   */\n  selectedColor: string;\n};\n\nexport type DayType = {\n  date: Date;\n  id: string;\n  key: string;\n  isActive: boolean;\n  isEndDate: boolean;\n  isHidden: boolean;\n  isMonthDate: boolean;\n  isOutOfRange: boolean;\n  isStartDate: boolean;\n  isToday: boolean;\n  isWeekend: boolean;\n  isVisible: boolean;\n};\n\ntype MarkedDay = {\n  dots?: DayDot[];\n  theme?: DayTheme;\n};\n\nexport type MarkedDays = Record<string, MarkedDay>;\n\nexport interface MonthProps {\n  /**\n   * Month number [0 - 11]\n   *\n   * @type {number}\n   * @memberof MonthProps\n   */\n  month: number;\n\n  /**\n   * Year number\n   *\n   * @type {number}\n   * @memberof MonthProps\n   */\n  year: number;\n\n  /**\n   * Day pressed callback\n   *\n   * @memberof MonthProps\n   * @returns {Date}\n   */\n  onPress: (date: Date) => void;\n\n  locale?: LocaleType;\n  dayNames?: string[];\n\n  /**\n   *\n   *\n   * @type {boolean}\n   * @memberof MonthProps\n   */\n  showWeekdays?: boolean;\n\n  /**\n   * Disable range selection\n   *\n   * @type {boolean}\n   * @default false\n   * @memberof MonthProps\n   */\n  disableRange?: boolean;\n\n  /**\n   * Hide days that do not belong to the month\n   *\n   * @type {boolean}\n   * @default false\n   * @memberof MonthProps\n   */\n  disableOffsetDays?: boolean;\n\n  /**\n   * Show monday as first day of the week\n   *\n   * @type {boolean}\n   * @default true\n   * @description Monday is the first day of the week according to the international standard ISO 8601\n   * @memberof MonthProps\n   */\n  firstDayMonday?: boolean;\n  startDate?: Date;\n  endDate?: Date;\n  minDate?: Date;\n  maxDate?: Date;\n  markedDays?: MarkedDays;\n  showSixWeeks?: boolean;\n  theme?: ThemeType;\n  renderDayContent?: (day: DayType) => ReactElement;\n  disabledDays?: { [key: string]: any };\n}\n"],"mappings":""}